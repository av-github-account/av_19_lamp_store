services:
  product_service:
    build: ./product_service
    container_name: product_service
    command: uvicorn app.main:app --host 0.0.0.0 --port 8001 --reload
    ports:
      - "8001:8001"
    env_file:
      - ./product_service/.env
    depends_on:
      product_db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 3s
      retries: 5

  product_db:
    image: postgres:15
    container_name: product_db
    ports:
      - "5433:5432"
    env_file:
      - ./product_service/.env
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 3s
      retries: 5

  order_service:
    build: ./order_service
    container_name: order_service
    command: uvicorn app.main:app --host 0.0.0.0 --port 8002 --reload
    ports:
      - "8002:8002"
    env_file:
      - ./order_service/.env
    depends_on:
      order_db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 10s
      timeout: 3s
      retries: 5

  order_db:
    image: postgres:15
    container_name: order_db
    ports:
      - "5434:5432"
    env_file:
      - ./order_service/.env
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 3s
      retries: 5

  admin_service:
    build: ./admin_service
    container_name: admin_service
    command: uvicorn app.main:app --host 0.0.0.0 --port 8003 --reload
    ports:
      - "8003:8003"
    env_file:
      - ./admin_service/.env
    depends_on:
      admin_db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 10s
      timeout: 3s
      retries: 5

  admin_db:
    image: postgres:15
    container_name: admin_db
    ports:
      - "5435:5432"
    env_file:
      - ./admin_service/.env
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
# services:
#   product_service:
#     build: ./product_service
#     container_name: product_service
#     command: uvicorn app.main:app --host 0.0.0.0 --port 8001 --reload
#     ports:
#       - "8001:8001"
#     env_file:
#       - ./product_service/.env
#     environment:
#       - DB_HOST=product_db
#       - DB_PORT=5432
#       - DB_NAME=products
#       - DB_USER=postgres
#       - DB_PASSWORD=postgres
#     depends_on:
#       - product_db

#   product_db:
#     image: postgres:15
#     container_name: product_db
#     environment:
#       POSTGRES_DB: products
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: postgres
#     ports:
#       - "5433:5432"

#   order_service:
#     build: ./order_service
#     container_name: order_service
#     command: uvicorn app.main:app --host 0.0.0.0 --port 8002 --reload
#     ports:
#       - "8002:8002"
#     env_file:
#       - ./order_service/.env
#     environment:
#       - DB_HOST=order_db
#       - DB_PORT=5432
#       - DB_NAME=orders
#       - DB_USER=postgres
#       - DB_PASSWORD=postgres
#     depends_on:
#       - order_db

#   order_db:
#     image: postgres:15
#     container_name: order_db
#     environment:
#       POSTGRES_DB: orders
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: postgres
#     ports:
#       - "5434:5432"

#   admin_service:
#     build: ./admin_service
#     container_name: admin_service
#     command: uvicorn app.main:app --host 0.0.0.0 --port 8003 --reload
#     ports:
#       - "8003:8003"
#     environment:
#       - DB_HOST=admin_db
#       - DB_PORT=5432
#       - DB_NAME=admin
#       - DB_USER=postgres
#       - DB_PASSWORD=postgres
#     depends_on:
#       - admin_db

#   admin_db:
#     image: postgres:15
#     container_name: admin_db
#     environment:
#       POSTGRES_DB: admin
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: postgres
#     ports:
#       - "5435:5432"
